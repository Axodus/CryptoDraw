name: CI/CD CryptoDraw

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      network:
        description: 'The network to deploy to'
        required: true
        default: 'sepolia'
        type: choice
        options:
          - mainnet
          - sepolia
          - harmony
          - bsc
          - bsc_testnet
          - opBNB
          - opBNB_testnet
          # Add more networks if needed

jobs:
  setup:
    name: Setup and Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Set RPC URL
        id: set-rpc
        run: |
          if [ "${{ github.event.inputs.network }}" == "mainnet" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_MAINNET }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "sepolia" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_SEPOLIA }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "harmony" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_HARMONY }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "bsc" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_BSC }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "bsc_testnet" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_BSC_TESTNET }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "opBNB" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_opBNB }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "opBNB_testnet" ]; then
            echo "RPC_URL=${{ secrets.RPC_URL_opBNB_TESTNET }}" >> $GITHUB_ENV
          fi

      - name: Set NATIVE_TOKEN
        id: set-native-token
        run: |
          if [ "${{ github.event.inputs.network }}" == "mainnet" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_MAINNET }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "sepolia" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_SEPOLIA }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "harmony" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_HARMONY }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "bsc" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_BSC }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "bsc_testnet" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_BSC_TESTNET }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "opBNB" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_opBNB }}" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.network }}" == "opBNB_testnet" ]; then
            echo "NATIVE_TOKEN=${{ secrets.NATIVE_TOKEN_opBNB_TESTNET }}" >> $GITHUB_ENV
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npx hardhat test

  deploy:
    name: Deploy Contract
    runs-on: ubuntu-latest
    needs: [setup, test]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Run Deployment Script
        env:
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
          NATIVE_TOKEN: ${{ env.NATIVE_TOKEN }}
          VRF_COORDINATOR_ADDRESS: ${{ secrets.VRF_COORDINATOR_ADDRESS }}
          KEY_HASH: ${{ secrets.KEY_HASH }}
          SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          PROJECT_FUNDS: ${{ secrets.PROJECT_FUNDS }}
          GRANT_FUND: ${{ secrets.GRANT_FUND }}
          OPERATION_FUND: ${{ secrets.OPERATION_FUND }}
          RPC_URL: ${{ env.RPC_URL }}
        run: npx hardhat run scripts/deploy.js --network ${{ github.event.inputs.network }}
